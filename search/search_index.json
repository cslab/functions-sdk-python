{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Functions-SDK for Python","text":"<p>This SDK provides the csfunctions library for developing Functions with Python.</p> <p>Functions are deeply integrated with the CIM Database Cloud\u00a0\u29c9 Webhooks technology. They are designed to work seamlessly together. The goal is to allow you to implement custom business logic in a CIM Database Cloud SaaS application without leaving CONTACT Cloud and without the need to create and maintain separate infrastructure.</p>"},{"location":"#requirements","title":"Requirements","text":"<p>Python 3.10+</p> <p>csfunctions is built with Pydantic 2\u00a0\u29c9.</p>"},{"location":"#installation","title":"Installation","text":"<p>Install using pip: <pre><code>pip install contactsoftware-functions\n</code></pre></p>"},{"location":"#usage","title":"Usage","text":""},{"location":"#build-the-function","title":"Build the Function","text":"<p>Folder contents of a minimal example for a Function implementation:</p> <pre><code>  my_example_functions/\n  \u251c\u2500\u2500 environment.yaml\n  \u251c\u2500\u2500 mymodule.py\n  \u2514\u2500\u2500 requirements.txt\n</code></pre> <p>Code for a Function:</p> mymodule.py<pre><code>import requests\nimport json\n\nfrom csfunctions import MetaData, Service\nfrom csfunctions.events import DocumentReleaseEvent\n\ndef send_doc_to_erp(metadata: MetaData, event: DocumentReleaseEvent, service: Service):\n  # Iterate over the documents contained in the event\n  for document in event.data.documents:\n    # Create the payload for our (fictional ERP system)\n    payload = json.dumps({\n      \"document_number\": document.z_nummer,\n      \"document_index\": document.z_index,\n      \"document_title\": document.titel\n    })\n    res = requests.post(\"https://example.com\", data=payload)\n    if res.status_code != 200:\n      return ValueError(f\"Failed to upload document to ERP. Got response code {res.status_code}\")\n</code></pre> <p>Environment file to define runtime and Function entry points:</p> environment.yaml<pre><code>runtime: python3.10\nversion: v1\nfunctions:\n  - name: send_doc_to_erp\n    entrypoint: mymodule.send_doc_to_erp\n</code></pre> <p>Define requirements:</p> requirements.txt<pre><code>contactsoftware-functions\n</code></pre>"},{"location":"#deploy-the-code","title":"Deploy the Code","text":"<p>To deploy the code, you first need to install the contactsoftware-functions-client\u00a0\u29c9 and retrieve developer credentials in the CONTACT Portal.</p> <p>Install client:</p> <pre><code>pip install contactsoftware-functions-client\n</code></pre> <p>Login:</p> <pre><code>cfc login\n</code></pre> <p>Create a new environment:</p> <pre><code>cfc env create myenv\n</code></pre> <p>Upload code into the new environment:</p> <pre><code>cfc env deploy myenv\n</code></pre>"},{"location":"development_server/","title":"Development Server","text":"<p>The Functions SDK includes a development server that allows you to run your Functions in your development environment. The server reads Functions from the <code>environment.yaml</code> file and makes them available via HTTP endpoints. You can then connect these Functions to your CIM Database Cloud instance using webhooks.</p> <p>This speeds up the development of Functions because you can instantly test your changes without deploying them to the cloud infrastructure first.</p>"},{"location":"development_server/#starting-the-server","title":"Starting the Server","text":"<p>You can start the development server using the following command:</p> <pre><code>python -m csfunctions.devserver\n</code></pre> <p>You can set the port of the server using the <code>--port</code> flag (default is 8000), or by setting the <code>CON_DEV_PORT</code> environment variable:</p> <pre><code>python -m csfunctions.devserver --port 8080\n</code></pre> <p>You can set the directory containing the <code>environment.yaml</code> file using the <code>--dir</code> flag (by default, the current working directory is used) or by setting the <code>CON_DEV_DIR</code> environment variable:</p> <pre><code>python -m csfunctions.devserver --dir ./my_functions\n</code></pre> <p>You can enable HMAC verification of requests using the <code>--secret</code> flag, or by setting the <code>CON_DEV_SECRET</code> environment variable:</p> <pre><code>python -m csfunctions.devserver --secret my_secret\n</code></pre>"},{"location":"development_server/#autoreloading","title":"Autoreloading","text":"<p>The development server will automatically restart if you make changes to your Functions code or to the <code>environment.yaml</code> file.</p>"},{"location":"development_server/#exposing-the-server","title":"Exposing the Server","text":"<p>To enable your CIM Database Cloud instance to send webhook requests to your Functions, you need to make the server accessible from the internet. Here are several ways to do this:</p> <p>GitHub Codespaces</p> <p>If you are developing Functions in a GitHub Codespace, you can expose the server by right-clicking on the dev server's port in the \"Ports\" tab and changing the visibility to \"Public\":</p> <p></p> <p>You can then copy the URL of the server and use it to connect your Functions to your CIM Database Cloud instance using webhooks.</p> <p>ngrok and Cloudflare</p> <p>If you are developing Functions locally, you can use services like ngrok\u00a0\u29c9 or Cloudflare\u00a0\u29c9 to expose your server to the internet.</p> <p>Please refer to the documentation of the specific service for instructions on how to do this.</p>"},{"location":"development_server/#create-a-webhook-in-cim-database-cloud","title":"Create a Webhook in CIM Database Cloud","text":"<p>To test your Functions locally, create a webhook in your CIM Database Cloud instance and point it to your development server.</p> <p>The webhook URL should combine your development server URL with the Function name from your <code>environment.yaml</code> file using this format:</p> <p><code>https://&lt;development-server-url&gt;/&lt;function-name&gt;</code></p> <p>For example, the <code>example</code> function would be available at:</p> <pre><code>https://mycodespace-5g7grjgvrv9h4jrx-8000.app.github.dev/example\n</code></pre> <p>Make sure to set the webhook's event to the correct event you want to test with your Function.</p> <p>For more detailed information on how to create a webhook in CIM Database Cloud, please refer to the CIM Database Cloud documentation\u00a0\u29c9.</p>"},{"location":"development_server/#securing-the-development-server","title":"Securing the Development Server","text":"<p>Since the development server is exposed to the outside world, you should secure it to prevent unauthorized access.</p> <p>You can enable HMAC verification of requests using the <code>--secret</code> flag, or by setting the <code>CON_DEV_SECRET</code> environment variable:</p> <pre><code>python -m csfunctions.devserver --secret my_secret\n</code></pre> <p>Make sure to use the same secret in your CIM Database Cloud instance when setting up the webhook and enable HMAC signing.</p>"},{"location":"getting_started/","title":"Getting started","text":"<p>This guide will help you get started building your first Function and deploying it to CIM Database Cloud.</p>"},{"location":"getting_started/#setting-up-your-codespace","title":"Setting up your Codespace","text":"<p>The first step to developing your own Functions is setting up a development environment. To make this simple, we recommend using GitHub Codespaces, which is a remote development environment that you can access through your browser. No local setup required!</p> <p>Note</p> <p>If you are an experienced developer and wish to set up a development environment on your own machine, you can skip Codespaces and install the SDK in a local Python environment using <code>pip install contactsoftware-functions</code>.</p> <p>To get started, head to the template repository for Functions: https://github.com/cslab/functions-template-python\u00a0\u29c9</p> <ul> <li>You need a (free) account on GitHub.</li> <li> <p>Copy the repository by clicking the \"Use this template\" button on the top right and select \"Create a new repository\".</p> <p></p> </li> <li> <p>Make sure your new repository is set to private!</p> <p></p> </li> <li> <p>In your new repository, create a development container by clicking on the green \"Code\" button and selecting \"Create codespace on main\".</p> <p></p> <p>This will take a few minutes, and you will see a new tab open in your browser with a development container running.</p> </li> </ul> <p>After completing these steps, you will have a development environment with all required tools already installed!</p>"},{"location":"getting_started/#build-your-first-function","title":"Build your first Function","text":""},{"location":"getting_started/#file-structure","title":"File structure","text":"<p>A minimal Function implementation consists of three files:</p> <ul> <li><code>environment.yaml</code> describes the environment and the Functions contained in it</li> <li><code>requirements.txt</code> contains the dependencies of your Functions (usually only contactsoftware-functions)</li> <li><code>mymodule.py</code> is a Python file containing the code of your Functions (feel free to pick a different name)</li> </ul> <p>Here is the complete structure:</p> <pre><code>  src/\n  \u251c\u2500\u2500 environment.yaml\n  \u251c\u2500\u2500 mymodule.py\n  \u2514\u2500\u2500 requirements.txt\n</code></pre> <p>If you are using the Codespaces template repository, you will find that it already contains the required file structure\u2014including a small example Function.</p>"},{"location":"getting_started/#function-code","title":"Function Code","text":"<p>Start by writing the code for your first Function. As a first example, you will write a Function that prevents you from creating documents with the title \"Test\". If you are interested in more complex (and realistic) examples, check out the Examples section of this documentation.</p> <p>In this example, you will use the DocumentCreateCheckEvent. It contains a list of documents that are about to be created. Typically, this will only be a single document; however, it is best practice to iterate over all of the documents.</p> mymodule.py<pre><code>from csfunctions import MetaData, Service\nfrom csfunctions.events import DocumentCreateCheckEvent\nfrom csfunctions.actions import AbortAndShowErrorAction\n\ndef prevent_test_document(metadata: MetaData, event: DocumentCreateCheckEvent, service: Service):\n  # iterate over the documents contained in the event\n  for document in event.data.documents:\n    # for each document, check if the title starts with \"Test\"\n    if document.titel.startswith(\"Test\"):\n      # abort and show an error message to the user\n      return AbortAndShowErrorAction(message=\"Test documents are not allowed.\")\n\n  # if no documents match the condition the Function doesn't need to do anything\n  return\n</code></pre> <p>Tip</p> <p>Using type annotations is not required in Python, but it is highly recommended, as it allows your code editor to give you better autocomplete recommendations and helps you spot mistakes faster.</p>"},{"location":"getting_started/#register-the-function","title":"Register the Function","text":"<p>The Function needs to be registered in the <code>environment.yaml</code> config file. If you are using the Codespaces template, the config file already contains a reference to the example Function. You can just add another entry for your new Function below:</p> environment.yaml<pre><code>runtime: python3.10\nversion: v1\nfunctions:\n  # this is the example Function from the template\n  - name: example\n    entrypoint: example_module.example_doc_release_check\n  # just add your new Function below like this:\n  - name: prevent_test_document\n    entrypoint: mymodule.prevent_test_document\n</code></pre> <p>You can add as many functions to the list as you like. The function <code>name</code> can be chosen freely and doesn't have to match the name of your Python method (although it is recommended that it does). The name will be used to identify the Function in your CIM Database Cloud instance. The <code>entrypoint</code> needs to be the import path of your Python function.</p>"},{"location":"getting_started/#dependencies","title":"Dependencies","text":"<p>Lastly, define your code's dependencies in the <code>requirements.txt</code>:</p> <p>requirements.txt<pre><code>contactsoftware-functions\n</code></pre> <code>contactsoftware-functions</code> will always need to be in the requirements.txt unless you register your own main_entrypoint (see Python runtime).</p> <p>The Codespaces template already includes the required dependencies.</p>"},{"location":"getting_started/#test-your-code","title":"Test your code","text":"<p>To test if your Function works as intended, you could now proceed to upload the code to CIM Database Cloud (as described in the next section). However, to speed up development, it is recommended to use the development server that is built into csfunctions to run and test the code in your local development environment.</p> <p>Head over to the development server documentation to find out how to run your Functions locally. Once you are happy with your Function's code, proceed to the next section of this guide to learn how to deploy your code to the CIM Database Cloud serverless infrastructure.</p>"},{"location":"getting_started/#deploy-the-code","title":"Deploy the code","text":"<p>To deploy your code to CIM Database Cloud, you first need to retrieve your Functions developer credentials. This requires you to have the Functions Developer role in the CONTACT Portal. The role can be assigned to you by your organization's administrator in the CONTACT Portal.</p> <ul> <li>Go to the CONTACT Portal https://portal.contact-cloud.com\u00a0\u29c9 and log in.</li> <li>Open the menu in the top right corner and click on your name.     </li> <li>In the context menu of your user, click on \"Display credentials for functions development\".     </li> </ul> <p>You can then use the Functions client\u00a0\u29c9 to upload your Function code to CIM Database Cloud. If you are using Codespaces, the Functions client is already installed. Otherwise, you can install it with <code>pipx install contactsoftware-functions-client</code>.</p> <p>Log in with the credentials you retrieved from the CONTACT Portal:</p> <pre><code>cfc login\n</code></pre> <p>Create a new Function Environment:</p> <pre><code>cfc env create myenv\n</code></pre> <p>Upload code into the new environment:</p> <pre><code>cfc env deploy myenv\n</code></pre> <p>Warning</p> <p>Uploading code into an environment will overwrite the existing code in the environment.</p>"},{"location":"getting_started/#connect-the-function","title":"Connect the Function","text":"<p>The final step is to connect your Function to an event in your CIM Database Cloud instance. You need to have the Administrator role in the instance to do this.</p> <p>To connect your Function, open the Application Setup in your CIM Database Cloud instance and create a new Function:</p> <p></p> <p>In the dialog, select the event that should trigger your Function. For this example, choose document_create_check.</p> <p>Find your environment's name in the Environment drop-down menu, then select your Function. The Function's name will match the name you used when you registered the Function in the <code>environment.yaml</code> file.</p> <p>Tip</p> <p>If you can't find your environment or Function in the drop-down menu, make sure the Function was deployed successfully to CIM Database Cloud. Try closing and reopening the dialog to refresh the list of environments.</p> <p>Note</p> <p>CIM Database Cloud instances can only see Functions uploaded by users from the organization the environment belongs to. If you were invited to a CIM Database Cloud instance from a different organization, you will not be able to connect your Functions to that instance.</p>"},{"location":"key_concepts/","title":"Concepts","text":""},{"location":"key_concepts/#webhooks","title":"Webhooks","text":"<p>Webhooks in CIM Database Cloud can be used to call HTTP endpoints with context-related metadata for certain events (e.g. document release). Further information about webhooks can be found in the CIM Database Cloud documentation\u00a0\u29c9.</p>"},{"location":"key_concepts/#functions","title":"Functions","text":"<p>Events in CIM Database Cloud can also trigger Functions, which represent user defined code that is executed in the CIM Database Cloud serverless infrastructure. This allows customers to extend the functionality of CIM Database Cloud with custom business logic.</p>"},{"location":"key_concepts/#function-environments","title":"Function Environments","text":"<p>Functions are grouped into Function Environments, which are the container the code runs in. An environment contains a runtime for its specific programming language, the Function code and a configuration file describing the environment.</p> <p>If the Functions in an environment have not been executed in a while, the environment will become \"cold\" and the next start of a Function will take a bit longer. Therefore it is recommended to place all your Functions in the same environment.</p> <p>Function environments are created with the Functions client\u00a0\u29c9:</p> <pre><code>pipx install contactsoftware-functions-client\n\ncfc login\ncfc env create myenvironment\n</code></pre>"},{"location":"release_notes/","title":"Releases","text":""},{"location":"release_notes/#version-0181","title":"Version 0.18.1:","text":"<ul> <li>Fix: Incorrect typing of custom model date fields</li> </ul>"},{"location":"release_notes/#version-0180","title":"Version 0.18.0:","text":"<ul> <li>Feat: Add support for custom attributes on documents and parts</li> </ul>"},{"location":"release_notes/#version-0150","title":"Version 0.15.0:","text":"<ul> <li>Feat: Upload service</li> <li>improve documentation</li> </ul>"},{"location":"release_notes/#version-0140","title":"Version 0.14.0:","text":"<ul> <li>Feat: Improve error logging when using the devserver</li> <li>Feat: Add StartWorkflowAction</li> </ul>"},{"location":"release_notes/#version-0131","title":"Version 0.13.1:","text":"<ul> <li>Fix: Status Changed Events did not correctly link Engineering Changes.</li> </ul>"},{"location":"release_notes/#version-0130","title":"Version 0.13.0:","text":"<ul> <li>Feature: Added status change events for engineering changes</li> </ul>"},{"location":"release_notes/#version-0120","title":"Version 0.12.0:","text":"<p>Breaking changes:</p> <ul> <li> <p>Changed the names of the events and their classes, to be more consistent:</p> </li> <li> <p><code>DocumentReleaseEvent</code> -&gt; <code>DocumentReleasedEvent</code></p> </li> <li> <p><code>PartReleaseEvent</code> -&gt; <code>PartReleasedEvent</code></p> </li> <li> <p><code>EngineeringChangeRelease</code> -&gt; <code>EngineeringChangeReleasedEvent</code></p> </li> <li> <p><code>EngineeringChangeCheck</code>&gt; <code>EngineeringChangeCheckEvent</code></p> </li> <li> <p>Event data now consistently uses the attributes <code>parts</code> and <code>documents</code> instead of <code>linked_parts</code> or <code>attached_parts</code></p> </li> </ul>"},{"location":"release_notes/#version-0111","title":"Version 0.11.1:","text":"<ul> <li>Fix: crash when using pydantic&gt;=2.11</li> </ul>"},{"location":"release_notes/#version-0110","title":"Version 0.11.0:","text":"<ul> <li>Feature: Added Document and Part field calculation events.</li> </ul>"},{"location":"release_notes/#version-0100","title":"Version 0.10.0:","text":"<ul> <li>Feature: Added development server that can be used to run Functions locally for testing and development.</li> </ul>"},{"location":"release_notes/#version-090","title":"Version 0.9.0:","text":"<ul> <li>Feature: Added new \"Create Check\" and \"Modify Check\" events for Documents, Parts and Engineering Changes, which are triggered before an object is created or modified and allow the creation or modification to be aborted by returning an Action.</li> </ul>"},{"location":"release_notes/#version-084","title":"Version 0.8.4:","text":"<ul> <li>Add MyPy support</li> </ul>"},{"location":"release_notes/#version-083","title":"Version 0.8.3:","text":"<ul> <li>added the fields <code>short_name</code>, <code>application</code> and <code>remark</code> to Material</li> </ul>"},{"location":"release_notes/#version-082","title":"Version 0.8.2:","text":"<ul> <li>added the fields <code>teilenummer</code>and <code>t_index</code> to BOMItem</li> </ul>"},{"location":"release_notes/#version-081","title":"Version 0.8.1:","text":"<ul> <li>Fix: removed incorrect dependency to urllib3</li> </ul>"},{"location":"release_notes/#version-080","title":"Version 0.8.0:","text":"<ul> <li> <p>Feature: New \"Release Check\" events for Documents, Parts and Engineering Changes, which are triggered before an object is released and allow the release to be aborted by returning an Action.</p> </li> <li> <p>Feature: Actions can be returned by a Function to perform actions in CIM Database in response to an event. The first new Action <code>AbortAndShowErrorAction</code> can be used to abort the current operation in CIM Database, e.g. to abort a release process if certain conditions are not met.</p> </li> </ul>"},{"location":"release_notes/#version-072","title":"Version 0.7.2","text":"<ul> <li>Fix: removed (broken) logging redirect (will be handled by the runtime instead)</li> </ul>"},{"location":"release_notes/#version-071","title":"Version 0.7.1","text":"<ul> <li>Enhancement: The objects <code>document</code> and <code>ec</code> now contain the attribute <code>cdb_object_id</code>.</li> </ul>"},{"location":"release_notes/#version-070","title":"Version 0.7.0","text":"<ul> <li>Feature: Functions no longer need to explicitly return a <code>Response</code> object.</li> <li>Feature: The <code>event_id</code> of <code>Response</code> objects is now filled in automatically before the response is returned.</li> </ul>"},{"location":"examples/","title":"Examples","text":"<p>This section contains example Functions that you can copy and adapt to your specific use case. Remember to register the Function in the <code>environment.yaml</code> after copying it into your code base.</p>"},{"location":"examples/enforce_field_rules/","title":"Enforce field rules","text":"<p>Functions can be used to validate user input and ensure that fields on, for example, parts or documents are filled out correctly.</p>"},{"location":"examples/enforce_field_rules/#required-field-based-on-part-category","title":"Required field based on Part category","text":"<p>This example shows how you can enforce that parts in the category \"Single Part\" must have a material assigned.</p> <p>The example Function can be connected to the PartCreateCheckEvent and PartModifyCheckEvent. It will return an AbortAndShowErrorAction to abort the creation or modification of the part if the condition is not met.</p> <pre><code>from csfunctions import MetaData, Service\nfrom csfunctions.actions import AbortAndShowErrorAction\nfrom csfunctions.events import (\n    PartCreateCheckEvent,\n    PartModifyCheckEvent,\n)\n\n\ndef single_part_needs_material(\n    metadata: MetaData,\n    event: PartCreateCheckEvent | PartModifyCheckEvent,\n    service: Service,\n):\n    \"\"\"\n    If a part of category 'Single Part' is created or modified, a material must be assigned.\n    This should be checked when the part is created or modified.\n    \"\"\"\n\n    for part in event.data.parts:\n        # The event contains a list of parts that are about to be created or modified\n        if part.t_kategorie_name_en == \"Single Part\" and not part.material_object_id:\n            return AbortAndShowErrorAction(\n                message=\"A material must be assigned to a part of category 'Single Part'.\"\n            )\n</code></pre>"},{"location":"examples/enforce_field_rules/#require-parts-to-be-classified-before-release","title":"Require parts to be classified before release","text":"<p>Classification is a powerful tool for organizing your parts. However, even the best tool is only effective if users actually use it. With this example Function, you can require that parts are classified before they can be released.</p> <p>This Function should be connected to the PartReleaseCheckEvent and will return an AbortAndShowErrorAction to prevent the release if classification data is missing.</p> <p>The example code demonstrates how to fetch classification data for parts from the CIM Database Cloud GraphQL API\u00a0\u29c9. The Function then checks if any classification data is present, but you can easily expand this to check for specific classes.</p> <pre><code>from csfunctions import MetaData, Service\nfrom csfunctions.actions import AbortAndShowErrorAction\nfrom csfunctions.events import (\n    PartReleaseCheckEvent,\n)\nimport requests\n\n\ndef fetch_part_classification_property_codes(cdb_object_id: str, metadata: MetaData) -&gt; list[str]:\n    \"\"\"\n    Returns a list of classification property codes for a given object ID.\n    \"\"\"\n\n    graphql_url = str(metadata.db_service_url).rstrip(\"/\") + \"/graphql/v1\"\n    query = f\"\"\"{{\n        object_property_values(ref_object_id: \"{cdb_object_id}\") {{\n            property_code\n        }}\n    }}\n    \"\"\"\n    response = requests.post(\n        graphql_url,\n        headers={\"Authorization\": f\"Bearer {metadata.service_token}\"},\n        json={\"query\": query},\n    )\n    response.raise_for_status()\n    data = response.json()\n    return [\n        item[\"property_code\"]\n        for item in data[\"data\"][\"object_property_values\"]\n    ]\n\n\ndef parts_need_classification(\n    metadata: MetaData,\n    event: PartReleaseCheckEvent,\n    service: Service,\n):\n    \"\"\"\n    Parts must be classified before they can be released.\n    \"\"\"\n\n    for part in event.data.parts:\n        # The event contains a list of parts that are about to be released\n        # For each part, fetch the classification property codes and check if they are empty\n        property_codes = fetch_part_classification_property_codes(part.cdb_object_id, metadata)\n        if not property_codes:\n            return AbortAndShowErrorAction(\n                message=f\"The part '{part.eng_benennung or part.benennung}' is missing classification data.\"\n            )\n</code></pre>"},{"location":"examples/field_calculation/","title":"Field calculation","text":"<p>The datasheet editor in CIM Database Cloud already allows you to define some basic field calculations\u00a0\u29c9 to fill out fields automatically.</p> <p>However, the Python expressions available in the datasheet editor are limited. Functions allow for much more flexibility in defining your field calculations, enabling you to do things like fetching external data or referencing other objects.</p> <p>Field calculations with Functions utilize the <code>&lt;Object&gt;FieldCalculationEvent</code>, e.g. PartFieldCalculationEvent, which expects the response to contain a <code>DataResponse</code> with a dictionary of the fields that should be updated.</p> <pre><code>return DataResponse(data={\"somefield\": \"new value\"})\n</code></pre>"},{"location":"examples/field_calculation/#custom-part-number-for-external-parts","title":"Custom part number for external parts","text":"<p>This example shows you the basics of calculating fields with Functions and how to use the <code>service</code> parameter to generate a new number.</p> <p>The example Function checks if the part is an \"External\" part and generates a custom part number for it.</p> <pre><code>from csfunctions import DataResponse\nfrom csfunctions.events import PartFieldCalculationEvent\nfrom csfunctions.metadata import MetaData\nfrom csfunctions.service import Service\n\ndef calculate_part_number(metadata: MetaData, event: PartFieldCalculationEvent, service: Service):\n    \"\"\"\n    Example Function.\n    This function is triggered when a part field should be calculated.\n    For \"External\" parts, we want to set the part number as \"E-000123\".\n    All other parts should keep the standard part number.\n    \"\"\"\n    if event.data.action != \"create\":\n        # Part number can only be set when the part is created\n        return\n\n    # Match \"External Single Part\" or \"External Assembly\"\n    if event.data.part.t_kategorie_name_en.startswith(\"External\"):\n        # Generate a new number using the service\n        new_number = service.generator.get_number(\"external_part_number\")\n        # new_number is an integer, so we need to convert it to a string\n        # and pad it with leading zeros to 6 digits\n        new_part_number = str(new_number).zfill(6)\n        # Add the prefix \"E-\" to the number\n        new_part_number = \"E-\" + new_part_number\n        # Return the new part number (teilenummer)\n        return DataResponse(data={\"teilenummer\": new_part_number})\n</code></pre> <p>Tip</p> <p>You can check <code>event.data.action</code> to decide for which operations (copy, create, index, and modify) you want your field calculation to return a new value. Some fields, like part number (teilenummer), can only be set during the initial creation.</p>"},{"location":"examples/field_calculation/#translate-a-part-name-with-deepl","title":"Translate a part name with DeepL","text":"<p>This example uses the DeepL API\u00a0\u29c9 to translate the part name of newly created parts from German to English or vice versa, depending on which name is already provided. You can easily adapt this example to translate other fields or use a different translation API if needed.</p> <pre><code>import os\nfrom csfunctions import DataResponse\nfrom csfunctions.events import PartFieldCalculationEvent\nimport requests\n\n# Set the DEEPL_API_KEY during deployment like this:\n# cfc env deploy &lt;environment name&gt; --environment-variables \"DEEPL_API_KEY=&lt;your API key&gt;\"\nDEEPL_API_KEY = os.getenv(\"DEEPL_API_KEY\")\n\ndef part_field_calculation(metadata, event: PartFieldCalculationEvent, service):\n    if event.data.action != \"create\":\n        # Only translate on creation\n        return\n\n    if event.data.part.eng_benennung and not event.data.part.benennung:\n        # English part name is set but German name is missing\n        # -&gt; translate English name to German\n        translated_text = translate_text(\n            event.data.part.eng_benennung, target_lang=\"DE\", source_lang=\"EN\")\n        return DataResponse(data={\"benennung\": translated_text})\n    elif event.data.part.benennung and not event.data.part.eng_benennung:\n        # German name is set but English name is missing\n        # -&gt; translate German name to English\n        translated_text = translate_text(\n            event.data.part.benennung, target_lang=\"EN\", source_lang=\"DE\")\n        return DataResponse(data={\"eng_benennung\": translated_text})\n\ndef translate_text(text, target_lang, source_lang=None):\n    url = \"https://api-free.deepl.com/v2/translate\"\n    data = {\n        \"auth_key\": DEEPL_API_KEY,\n        \"text\": text,\n        \"target_lang\": target_lang.upper()\n    }\n    if source_lang:\n        data[\"source_lang\"] = source_lang.upper()\n\n    response = requests.post(url, data=data)\n    response.raise_for_status()\n    return response.json()[\"translations\"][0][\"text\"]\n</code></pre> <p>Note</p> <p>This example requires a DeepL API key to function. Adding secrets like API keys to your code is a bad practice, which is why the example fetches the API key from an environment variable.</p> <p>You can set environment variables during deployment of your Function to the CIM Database Cloud Functions infrastructure like this:</p> <p><code>cfc env deploy &lt;environment name&gt; --environment-variables \"DEEPL_API_KEY=&lt;your API key&gt;\"</code></p>"},{"location":"examples/workflows/","title":"Working with workflows","text":"<p>Functions can interact with workflows. You can trigger Functions from within workflows using the Trigger Webhook\u00a0\u29c9 task, and you can even start new workflows by using the StartWorkflowAction!</p>"},{"location":"examples/workflows/#start-a-workflow-on-ec-status-change","title":"Start a workflow on EC status change","text":"<p>This example shows how to start a workflow template in response to an engineering change status change.</p> <p>Note</p> <p>Starting workflows in response to engineering change status changes is already possible in CIM Database Cloud without the use of Functions. However, Functions allow you to dynamically select different templates and fill out task parameters based on the nature of the change.</p> <p>This example uses a very simple template containing just an information task. If an engineering change contains external parts, users with the External Part Manager role should be notified of the planned change during the evaluation phase.</p> <p>You can easily adapt this example to your use case by adding additional tasks to the template or changing the conditions under which the workflow should be started.</p> <pre><code>from csfunctions.actions.start_workflow import (\n    StartWorkflowAction,\n    Subject,\n    TaskConfiguration,\n)\nfrom csfunctions.events import EngineeringChangeStatusChangedEvent\nfrom csfunctions import MetaData\n\n# Change these to match your template and roles!\nTEMPLATE_ID = \"PT00000002\"\nINFORMATION_TASK_ID = \"T00000008\"\nINFORM_ROLE = \"External Part Manager\"\n\n\ndef start_workflow_on_ec_status_change(\n    metadata: MetaData, event: EngineeringChangeStatusChangedEvent, service\n):\n    if event.data.engineering_change.status != 30:\n        # Only start the workflow if the status changed to 30 (Evaluation)\n        return\n\n    # Check if the EC contains external parts\n    if not any(\n        part.t_kategorie_name_en.startswith(\"External\")\n        for part in event.data.engineering_change.planned_changes_parts\n    ):\n        # No external parts, so we don't need to start the workflow\n        return\n\n    return StartWorkflowAction(\n        template_id=TEMPLATE_ID,\n        title=f\"Information about EC {event.data.engineering_change.cdb_ec_id}\",\n        # Attach the engineering change to the workflow\n        global_briefcase_object_ids=[\n            event.data.engineering_change.cdb_object_id],\n        task_configurations=[\n            TaskConfiguration(\n                task_id=INFORMATION_TASK_ID,\n                description=\"An engineering change containing external parts moved to the evaluation phase.\",\n                recipients=[\n                    Subject(\n                        subject_type=\"Common Role\",\n                        subject_id=INFORM_ROLE,\n                    )\n                ],\n            )\n        ],\n    )\n</code></pre> <p>Note</p> <p>To successfully execute this example, you need to:</p> <ul> <li>Create a workflow template with an information task and adjust the <code>TEMPLATE_ID</code> and <code>INFORMATION_TASK_ID</code> to match them.</li> <li>Create and assign an \"External Part Manager\" role to a user.</li> </ul>"},{"location":"reference/actions/","title":"Actions","text":"<p>Functions can return a list of \"Actions\" that should be performed in CIM Database Cloud.</p> <pre><code>from csfunctions.actions import AbortAndShowErrorAction\n\ndef my_function(metadata, event, service):\n    # this will show an error message to the user\n    return AbortAndShowErrorAction(message=\"Custom error message.\")\n</code></pre> <p>Not all Events support the same actions, so check the supported actions in the Events documentation. For example Events that are triggered after the release of an object don't support AbortAndShowError, because the release can't be aborted anymore, however the \"release check\" events do support it.</p>"},{"location":"reference/actions/#abortandshowerroraction","title":"AbortAndShowErrorAction","text":"<p><code>csfunctions.actions.AbortAndShowErrorAction</code></p> <p>Aborts the current operation and shows an error message to the user.</p> <p>Attributes:</p> Attribute Type Description message str Error message that will be shown to the user"},{"location":"reference/actions/#startworkflowaction","title":"StartWorkflowAction","text":"<p><code>csfunctions.actions.StartWorkflowAction</code></p> <p>Creates a new workflow from a template and starts it.</p> <p>Attributes:</p> Attribute Type Description template_id str ID of the workflow template cdb_project_id str | None ID of the project in which the workflow should be started title str Title that the new workflow should have (max. 255 characters) attachment_ids list[str] List of cdb_object_ids to attach to the workflow global_briefcase_object_ids list[str] List of cdb_object_ids to attach to the global briefcase task_configurations list[TaskConfiguration] List of task configurations <p>TaskConfiguration:</p> Attribute Type Description task_id str Identifier for the task responsible [Subject] | None Responsible Subject for the task recipients list[[Subject]] List of recipients  (only used by information tasks) description str | None Description of the task. If not set, the existing description will be kept. (max. 1024 characters) title str | None Title of the task. If not set, the existing title will be kept. (max. 60 characters) <p>Subject:</p> Attribute Type Description subject_id str ID of the subject, e.g. a role name or \"personalnummer\" subject_type str Type of the subject. Can be \"Person\", \"PCS Role\" or \"Common Role\""},{"location":"reference/events/","title":"Events","text":"<p>Events always have a <code>name</code> and a <code>data</code> attribute. The contents of those attributes depend on the type of the event.</p>"},{"location":"reference/events/#documentcreatecheckevent","title":"DocumentCreateCheckEvent","text":"<p><code>csfunctions.events.DocumentCreateCheckEvent</code></p> <p>This event is fired when a user tries to create or copy a document. Raising an exception will prevent the creation. The event is triggered before any field calculations are performed.</p> <p>Supported actions:</p> <ul> <li>AbortAndShowErrorAction</li> </ul> <p>DocumentCreateCheckEvent.name: document_create_check</p> <p>DocumentCreateCheckEvent.data:</p> Attribute Type Description documents list[Document] List of documents that are about to be created. parts list[Part] List of parts that belong to the documents."},{"location":"reference/events/#documentmodifycheckevent","title":"DocumentModifyCheckEvent","text":"<p><code>csfunctions.events.DocumentModifyCheckEvent</code></p> <p>This event is fired when a user tries to modify a document. Raising an exception will prevent the modification. The event is triggered before any field calculations are performed.</p> <p>Supported actions:</p> <ul> <li>AbortAndShowErrorAction</li> </ul> <p>DocumentModifyCheckEvent.name: document_modify_check</p> <p>DocumentModifyCheckEvent.data:</p> Attribute Type Description documents list[Document] List of documents that are about to be modified. parts list[Part] List of parts that belong to the documents."},{"location":"reference/events/#documentreleasecheckevent","title":"DocumentReleaseCheckEvent","text":"<p><code>csfunctions.events.DocumentReleaseCheckEvent</code></p> <p>This event is fired when a user tries to release a document. Raising an exception will prevent the release. If the release is done via the express release, the event is triggered before reviewers are notified. Be aware that the document is not released yet and the release might still be aborted for other reasons (e.g. the reviewers don't give approval), so don't sent the document to e.g. an ERP system yet.</p> <p>Supported actions:</p> <ul> <li>AbortAndShowErrorAction</li> </ul> <p>DocumentReleaseCheckEvent.name: document_release_check</p> <p>DocumentReleaseCheckEvent.data:</p> Attribute Type Description documents list[Document] List of documents that will be released. parts list[Part] List of parts that belong to the documents. dialog_data DocumentReleaseDialogData Contents of the dialog. <p>DocumentReleaseCheckDialogData:</p> Attribute Type Description cdbprot_remark str | None Remark cdb_ec_id str | None Engineering Change ID"},{"location":"reference/events/#documentreleasedevent","title":"DocumentReleasedEvent","text":"<p><code>csfunctions.events.DocumentReleasedEvent</code></p> <p>This event is fired after a document has been released. Raising an exception thus can not prevent the release.</p> <p>Supported actions:</p> <ul> <li>StartWorkflowAction</li> </ul> <p>DocumentReleasedEvent.name: document_released</p> <p>DocumentReleasedEvent.data:</p> Attribute Type Description documents list[Document] List of documents that were released. parts list[Part] List of parts that belong to the released documents. dialog_data DocumentReleaseDialogData Contents of the dialog. <p>DocumentReleasedDialogData:</p> Attribute Type Description cdbprot_remark str | None Remark cdb_ec_id str | None Engineering Change ID"},{"location":"reference/events/#documentfieldcalculationevent","title":"DocumentFieldCalculationEvent","text":"<p><code>csfunctions.events.DocumentFieldCalculationEvent</code></p> <p>This event is fired when a document is created, modified, copied or indexed. It is triggered after the field calculations defined in the datasheet editor are performed.</p> <p>The event expects a DataResponse containing a dictionary of field names and their new values. Fields that are not mentioned in the response are not updated.</p> <p>DocumentFieldCalculationEvent.name: document_field_calculation</p> <p>DocumentFieldCalculationEvent.data:</p> Attribute Type Description document Document Current state of the document action Literal[\"create\", \"modify\", \"copy\", \"index\"] Action being performed parts list[Part] Parts that belong to the document"},{"location":"reference/events/#engineeringchangereleasecheck","title":"EngineeringChangeReleaseCheck","text":"<p><code>csfunctions.events.EngineeringChangeReleaseCheck</code></p> <p>This event is fired when a user tries to release an engineering change. Raising an exception will prevent the release. Be aware that the engineering change is not released yet and the release might still be aborted for other reasons, so don't sent the engineering change to e.g. an ERP system yet.</p> <p>Supported actions:</p> <ul> <li>AbortAndShowErrorAction</li> </ul> <p>EngineeringChangeReleaseCheck.name: engineering_change_check_release</p> <p>EngineeringChangeReleaseCheck.data:</p> Attribute Type Description engineering_changes list[EngineeringChange] List of engineering changes that will be released. documents list[Document] List of included documents. parts list[Part] List of included parts."},{"location":"reference/events/#engineeringchangereleasedevent","title":"EngineeringChangeReleasedEvent","text":"<p><code>csfunctions.events.EngineeringChangeReleasedEvent</code></p> <p>This event is fired after an engineering change has been released. Raising an exception thus can not prevent the release.</p> <p>Supported actions:</p> <ul> <li>StartWorkflowAction</li> </ul> <p>EngineeringChangeReleasedEvent.name: engineering_change_released</p> <p>EngineeringChangeReleasedEvent.data:</p> Attribute Type Description engineering_changes list[EngineeringChange] List of engineering changes that were released. documents list[Document] List of included documents. parts list[Part] List of included parts."},{"location":"reference/events/#partcreatecheckevent","title":"PartCreateCheckEvent","text":"<p><code>csfunctions.events.PartCreateCheckEvent</code></p> <p>This event is fired when a user tries to create or copy a part. Raising an exception will prevent the creation. The event is triggered before any field calculations are performed.</p> <p>Supported actions:</p> <ul> <li>AbortAndShowErrorAction</li> </ul> <p>PartCreateCheckEvent.name: part_create_check</p> <p>PartCreateCheckEvent.data:</p> Attribute Type Description parts list[Part] List of parts that are about to be created. documents list[Document] List of documents that are referenced by the parts."},{"location":"reference/events/#partmodifycheckevent","title":"PartModifyCheckEvent","text":"<p><code>csfunctions.events.PartModifyCheckEvent</code></p> <p>This event is fired when a user tries to modify a part. Raising an exception will prevent the modification. The event is triggered before any field calculations are performed.</p> <p>Supported actions:</p> <ul> <li>AbortAndShowErrorAction</li> </ul> <p>PartModifyCheckEvent.name: part_modify_check</p> <p>PartModifyCheckEvent.data:</p> Attribute Type Description parts list[Part] List of parts that are about to be modified. documents list[Document] List of documents that are referenced by the parts."},{"location":"reference/events/#partreleasecheckevent","title":"PartReleaseCheckEvent","text":"<p><code>csfunctions.events.PartReleaseCheckEvent</code></p> <p>This event is fired when a user tries to release a part. Raising an exception will prevent the release. If the release is done via the express release, the event is triggered before reviewers are notified. Be aware that the part is not released yet and the release might still be aborted for other reasons (e.g. the reviewers don't give approval), so don't sent the part to e.g. an ERP system yet.</p> <p>Supported actions:</p> <ul> <li>AbortAndShowErrorAction</li> </ul> <p>PartRPartReleaseCheckEventeleaseEvent.name: part_release_check</p> <p>PartReleaseCheckEvent.data:</p> Attribute Type Description parts list[Part] List of parts that will released. documents list[Document] List of documents that belong to the released parts. dialog_data PartReleaseDialogData Contents of the dialog. <p>PartReleaseCheckDialogData:</p> Attribute Type Description cdbprot_remark str | None Remark cdb_ec_id str | None Engineering Change ID"},{"location":"reference/events/#partreleasedevent","title":"PartReleasedEvent","text":"<p><code>csfunctions.events.PartReleasedEvent</code></p> <p>This event is fired after a part has been released. Raising an exception thus can not prevent the release.</p> <p>Supported actions:</p> <ul> <li>StartWorkflowAction</li> </ul> <p>PartReleasedEvent.name: part_released</p> <p>PartReleasedEvent.data:</p> Attribute Type Description parts list[Part] List of parts that were released. documents list[Document] List of documents that belong to the released parts. dialog_data PartReleasedDialogData Contents of the dialog. <p>PartReleasedDialogData:</p> Attribute Type Description cdbprot_remark str | None Remark cdb_ec_id str | None Engineering Change ID"},{"location":"reference/events/#partfieldcalculationevent","title":"PartFieldCalculationEvent","text":"<p><code>csfunctions.events.PartFieldCalculationEvent</code></p> <p>This event is fired when a part is created, modified, copied or indexed. It is triggered after the field calculations defined in the datasheet editor are performed.</p> <p>The event expects a DataResponse containing a dictionary of field names and their new values. Fields that are not mentioned in the response are not updated.</p> <p>PartFieldCalculationEvent.name: part_field_calculation</p> <p>PartFieldCalculationEvent.data:</p> Attribute Type Description part Part Current state of the part action Literal[\"create\", \"modify\", \"copy\", \"index\"] Action being performed documents list[Document] List of documents that belong to the part"},{"location":"reference/events/#workflowtasktriggerevent","title":"WorkflowTaskTriggerEvent","text":"<p><code>csfunctions.events.WorkflowTaskTriggerEvent</code></p> <p>This event is fired by the workflow task \"Trigger Webhook\".</p> <p>WorkflowTaskTriggerEvent.name: workflow_task_trigger</p> <p>WorkflowTaskTriggerEvent.data:</p> Attribute Type Description workflows list[Workflow] List of workflows in this event. parts list[Part] List of parts attached to the workflow. documents list[Document] List of documents attached to the workflow. engineering_changes list[EngineeringChange] List of engineering changes attached to the workflow. briefcases list[Briefcase] List of briefcases attached to the workflow."},{"location":"reference/events/#engineeringchangestatuschanged","title":"EngineeringChangeStatusChanged","text":"<p><code>csfunctions.events.EngineeringChangeStatusChanged</code></p> <p>This event is fired after an engineering change's status has been modified. Raising an exception cannot prevent the status change.</p> <p>EngineeringChangeStatusChanged.name: engineering_change_status_changed</p> <p>EngineeringChangeStatusChanged.data:</p> Attribute Type Description engineering_change EngineeringChange The engineering change that had its status modified prev_status str The previous status of the engineering change documents list[Document] List of documents attached to the engineering change parts list[Part] List of parts attached to the engineering change"},{"location":"reference/events/#engineeringchangestatuschangecheck","title":"EngineeringChangeStatusChangeCheck","text":"<p><code>csfunctions.events.EngineeringChangeStatusChangeCheck</code></p> <p>This event is fired when a user tries to modify an engineering change's status. Raising an exception will prevent the status change.</p> <p>Supported actions:</p> <ul> <li>AbortAndShowErrorAction</li> </ul> <p>EngineeringChangeStatusChangeCheck.name: engineering_change_status_change_check</p> <p>EngineeringChangeStatusChangeCheck.data:</p> Attribute Type Description engineering_change EngineeringChange The engineering change that will have its status modified target_status int The status the engineering change will be set to documents list[Document] List of documents attached to the engineering change parts list[Part] List of parts attached to the engineering change"},{"location":"reference/objects/","title":"Objects","text":""},{"location":"reference/objects/#bomitem","title":"BOMItem","text":"<p><code>csfunctions.objects.BOMItem</code></p> Attribute Type Description baugruppe str | None Assembly b_index str | None Assembly Index component_materialnr_erp str | None Material Number ERP Component netto_durchm float | None Net. Diameter netto_hoehe float | None Net. Height netto_laenge float | None Net. Length netto_breite float | None Net. Width position int | None Position menge float | None Quantity stlbemerkung str | None Remarks mengeneinheit str | None Unit of Measure teilenummer str part number t_index str part index"},{"location":"reference/objects/#briefcase","title":"Briefcase","text":"<p><code>csfunctions.objects.Briefcase</code></p> <p>Briefcases are used by Workflows and can contain parts, documents or engineering changes.</p> Attribute Type Description cdb_object_id str Briefcase ID name str | None Briefcase Name part_ids list[str] List of part IDs in this Briefcase. (teilenummer@t_index) document_ids list[str] List of document IDs in this Briefcase. (z_nummer@z_index) engineering_change_ids list[str] List of engineering change IDs in this Briefcase. (cdb_ec_id) parts list[Part] documents list[Document] engineering_changes list[EngineeringChange]"},{"location":"reference/objects/#document","title":"Document","text":"<p><code>csfunctions.objects.Document</code></p> <p>Normal Document that doesn't contain a CAD-Model.</p> Attribute Type Description z_nummer str document number z_index str index titel str | None title category1_name_en str | None Main Category category1_name_de str | None Main Category category2_name_en str | None Category category2_name_de str | None Category z_categ1 str | None Main Category z_categ2 str | None Category cdb_obsolete int | None Obsolete z_status int Status Number z_status_txt str Status Text autoren str | None Authors, comma separated z_bereich str | None Department. z_language str | None language keywords str | None Keywords z_bemerkung str | None Remarks joined_status_name str | None Status erzeug_system str | None Program that created the document cdb_lock str | None User that locked the document. mapped_cdb_lock_name str | None Username that locked the document. ce_valid_from date | datetime | None Effective from ce_valid_to date | datetime | None Effective to cdb_ec_id str | None Engineering Change ID ursprungs_z str | None Origin teilenummer str | None Part No. t_index str | None Part Index cdb_project_id str | None Project No. project_name str | None Project Name src_name str | None Source src_cdate datetime | None Source created on src_rdate datetime | None Source received on src_number str | None Original No. src_index str | None Original Index src_fname str | None Original Filename source_oid str | None Based on Template cdb_cpersno str | None Created by mapped_cdb_cpersno_name str | None Created by cdb_cdate datetime | None Created on cdb_mpersno str | None Last Modified by mapped_cdb_mpersno_name str | None Last Modified by cdb_mdate datetime | None Last Modified on cdb_m2persno str | None File Last Saved by mapped_cdb_m2persno_name str | None File Last Saved by cdb_m2date datetime | None File Last Saved on z_art str | None Document Type mapped_materialnr_erp str | None Materialnumber ERP cdb_object_id str | None Object ID cca_char_doc_1 str | None Custom Char Field cca_char_doc_2 str | None Custom Char Field cca_char_doc_3 str | None Custom Char Field cca_char_doc_4 str | None Custom Char Field cca_char_doc_5 str | None Custom Char Field cca_char_doc_6 str | None Custom Char Field cca_char_doc_7 str | None Custom Char Field cca_char_doc_8 str | None Custom Char Field cca_char_doc_9 str | None Custom Char Field cca_char_doc_10 str | None Custom Char Field cca_char_doc_11 str | None Custom Char Field cca_char_doc_12 str | None Custom Char Field cca_char_doc_13 str | None Custom Char Field cca_char_doc_14 str | None Custom Char Field cca_char_doc_15 str | None Custom Char Field cca_char_doc_16 str | None Custom Char Field cca_char_doc_17 str | None Custom Char Field cca_char_doc_18 str | None Custom Char Field cca_char_doc_19 str | None Custom Char Field cca_char_doc_20 str | None Custom Char Field cca_integer_doc_1 int | None Custom Integer Field cca_integer_doc_2 int | None Custom Integer Field cca_integer_doc_3 int | None Custom Integer Field cca_integer_doc_4 int | None Custom Integer Field cca_integer_doc_5 int | None Custom Integer Field cca_integer_doc_6 int | None Custom Integer Field cca_integer_doc_7 int | None Custom Integer Field cca_integer_doc_8 int | None Custom Integer Field cca_integer_doc_9 int | None Custom Integer Field cca_integer_doc_10 int | None Custom Integer Field cca_integer_doc_11 int | None Custom Integer Field cca_integer_doc_12 int | None Custom Integer Field cca_integer_doc_13 int | None Custom Integer Field cca_integer_doc_14 int | None Custom Integer Field cca_integer_doc_15 int | None Custom Integer Field cca_integer_doc_16 int | None Custom Integer Field cca_integer_doc_17 int | None Custom Integer Field cca_integer_doc_18 int | None Custom Integer Field cca_integer_doc_19 int | None Custom Integer Field cca_integer_doc_20 int | None Custom Integer Field cca_float_doc_1 float | None Custom Float Field cca_float_doc_2 float | None Custom Float Field cca_float_doc_3 float | None Custom Float Field cca_float_doc_4 float | None Custom Float Field cca_float_doc_5 float | None Custom Float Field cca_float_doc_6 float | None Custom Float Field cca_float_doc_7 float | None Custom Float Field cca_float_doc_8 float | None Custom Float Field cca_float_doc_9 float | None Custom Float Field cca_float_doc_10 float | None Custom Float Field cca_float_doc_11 float | None Custom Float Field cca_float_doc_12 float | None Custom Float Field cca_float_doc_13 float | None Custom Float Field cca_float_doc_14 float | None Custom Float Field cca_float_doc_15 float | None Custom Float Field cca_float_doc_16 float | None Custom Float Field cca_float_doc_17 float | None Custom Float Field cca_float_doc_18 float | None Custom Float Field cca_float_doc_19 float | None Custom Float Field cca_float_doc_20 float | None Custom Float Field cca_date_doc_2 datetime | None Custom Date Field cca_date_doc_3 datetime | None Custom Date Field cca_date_doc_4 datetime | None Custom Date Field cca_date_doc_5 datetime | None Custom Date Field cca_date_doc_6 datetime | None Custom Date Field cca_date_doc_7 datetime | None Custom Date Field cca_date_doc_8 datetime | None Custom Date Field cca_date_doc_9 datetime | None Custom Date Field cca_date_doc_10 datetime | None Custom Date Field cca_date_doc_11 datetime | None Custom Date Field cca_date_doc_12 datetime | None Custom Date Field cca_date_doc_13 datetime | None Custom Date Field cca_date_doc_14 datetime | None Custom Date Field cca_date_doc_15 datetime | None Custom Date Field cca_date_doc_16 datetime | None Custom Date Field cca_date_doc_17 datetime | None Custom Date Field cca_date_doc_18 datetime | None Custom Date Field cca_date_doc_19 datetime | None Custom Date Field cca_date_doc_20 datetime | None Custom Date Field cca_date_doc_1 datetime | None Custom Date Field cca_bool_doc_1 bool | None Custom Boolean Field cca_bool_doc_2 bool | None Custom Boolean Field cca_bool_doc_3 bool | None Custom Boolean Field cca_bool_doc_4 bool | None Custom Boolean Field cca_bool_doc_5 bool | None Custom Boolean Field cca_bool_doc_6 bool | None Custom Boolean Field cca_bool_doc_7 bool | None Custom Boolean Field cca_bool_doc_8 bool | None Custom Boolean Field cca_bool_doc_9 bool | None Custom Boolean Field cca_bool_doc_10 bool | None Custom Boolean Field cca_bool_doc_11 bool | None Custom Boolean Field cca_bool_doc_12 bool | None Custom Boolean Field cca_bool_doc_13 bool | None Custom Boolean Field cca_bool_doc_14 bool | None Custom Boolean Field cca_bool_doc_15 bool | None Custom Boolean Field cca_bool_doc_16 bool | None Custom Boolean Field cca_bool_doc_17 bool | None Custom Boolean Field cca_bool_doc_18 bool | None Custom Boolean Field cca_bool_doc_19 bool | None Custom Boolean Field cca_bool_doc_20 bool | None Custom Boolean Field cca_bigchar_doc_1 str | None Custom BigChar Field cca_bigchar_doc_2 str | None Custom BigChar Field cca_bigchar_doc_3 str | None Custom BigChar Field cca_bigchar_doc_4 str | None Custom BigChar Field cca_bigchar_doc_5 str | None Custom BigChar Field cca_bigchar_doc_6 str | None Custom BigChar Field cca_bigchar_doc_7 str | None Custom BigChar Field cca_bigchar_doc_8 str | None Custom BigChar Field cca_bigchar_doc_9 str | None Custom BigChar Field cca_bigchar_doc_10 str | None Custom BigChar Field cca_bigchar_doc_11 str | None Custom BigChar Field cca_bigchar_doc_12 str | None Custom BigChar Field cca_bigchar_doc_13 str | None Custom BigChar Field cca_bigchar_doc_14 str | None Custom BigChar Field cca_bigchar_doc_15 str | None Custom BigChar Field cca_bigchar_doc_16 str | None Custom BigChar Field cca_bigchar_doc_17 str | None Custom BigChar Field cca_bigchar_doc_18 str | None Custom BigChar Field cca_bigchar_doc_19 str | None Custom BigChar Field cca_bigchar_doc_20 str | None Custom BigChar Field cca_char_model_1 str | None Custom Char Field cca_char_model_2 str | None Custom Char Field cca_char_model_3 str | None Custom Char Field cca_char_model_4 str | None Custom Char Field cca_char_model_5 str | None Custom Char Field cca_char_model_6 str | None Custom Char Field cca_char_model_7 str | None Custom Char Field cca_char_model_8 str | None Custom Char Field cca_char_model_9 str | None Custom Char Field cca_char_model_10 str | None Custom Char Field cca_char_model_11 str | None Custom Char Field cca_char_model_12 str | None Custom Char Field cca_char_model_13 str | None Custom Char Field cca_char_model_14 str | None Custom Char Field cca_char_model_15 str | None Custom Char Field cca_char_model_16 str | None Custom Char Field cca_char_model_17 str | None Custom Char Field cca_char_model_18 str | None Custom Char Field cca_char_model_19 str | None Custom Char Field cca_char_model_20 str | None Custom Char Field cca_bigchar_model_1 str | None Custom BigChar Field cca_bigchar_model_2 str | None Custom BigChar Field cca_bigchar_model_3 str | None Custom BigChar Field cca_bigchar_model_4 str | None Custom BigChar Field cca_bigchar_model_5 str | None Custom BigChar Field cca_bigchar_model_6 str | None Custom BigChar Field cca_bigchar_model_7 str | None Custom BigChar Field cca_bigchar_model_8 str | None Custom BigChar Field cca_bigchar_model_9 str | None Custom BigChar Field cca_bigchar_model_10 str | None Custom BigChar Field cca_bigchar_model_11 str | None Custom BigChar Field cca_bigchar_model_12 str | None Custom BigChar Field cca_bigchar_model_13 str | None Custom BigChar Field cca_bigchar_model_14 str | None Custom BigChar Field cca_bigchar_model_15 str | None Custom BigChar Field cca_bigchar_model_16 str | None Custom BigChar Field cca_bigchar_model_17 str | None Custom BigChar Field cca_bigchar_model_18 str | None Custom BigChar Field cca_bigchar_model_19 str | None Custom BigChar Field cca_bigchar_model_20 str | None Custom BigChar Field cca_integer_model_1 int | None Custom Integer Field cca_integer_model_2 int | None Custom Integer Field cca_integer_model_3 int | None Custom Integer Field cca_integer_model_4 int | None Custom Integer Field cca_integer_model_5 int | None Custom Integer Field cca_integer_model_6 int | None Custom Integer Field cca_integer_model_7 int | None Custom Integer Field cca_integer_model_8 int | None Custom Integer Field cca_integer_model_9 int | None Custom Integer Field cca_integer_model_10 int | None Custom Integer Field cca_integer_model_11 int | None Custom Integer Field cca_integer_model_12 int | None Custom Integer Field cca_integer_model_13 int | None Custom Integer Field cca_integer_model_14 int | None Custom Integer Field cca_integer_model_15 int | None Custom Integer Field cca_integer_model_16 int | None Custom Integer Field cca_integer_model_17 int | None Custom Integer Field cca_integer_model_18 int | None Custom Integer Field cca_integer_model_19 int | None Custom Integer Field cca_integer_model_20 int | None Custom Integer Field cca_float_model_1 float | None Custom Float Field cca_float_model_2 float | None Custom Float Field cca_float_model_3 float | None Custom Float Field cca_float_model_4 float | None Custom Float Field cca_float_model_5 float | None Custom Float Field cca_float_model_6 float | None Custom Float Field cca_float_model_7 float | None Custom Float Field cca_float_model_8 float | None Custom Float Field cca_float_model_9 float | None Custom Float Field cca_float_model_10 float | None Custom Float Field cca_float_model_11 float | None Custom Float Field cca_float_model_12 float | None Custom Float Field cca_float_model_13 float | None Custom Float Field cca_float_model_14 float | None Custom Float Field cca_float_model_15 float | None Custom Float Field cca_float_model_16 float | None Custom Float Field cca_float_model_17 float | None Custom Float Field cca_float_model_18 float | None Custom Float Field cca_float_model_19 float | None Custom Float Field cca_float_model_20 float | None Custom Float Field cca_bool_model_1 bool | None Custom Boolean Field cca_bool_model_2 bool | None Custom Boolean Field cca_bool_model_3 bool | None Custom Boolean Field cca_bool_model_4 bool | None Custom Boolean Field cca_bool_model_5 bool | None Custom Boolean Field cca_bool_model_6 bool | None Custom Boolean Field cca_bool_model_7 bool | None Custom Boolean Field cca_bool_model_8 bool | None Custom Boolean Field cca_bool_model_9 bool | None Custom Boolean Field cca_bool_model_10 bool | None Custom Boolean Field cca_bool_model_11 bool | None Custom Boolean Field cca_bool_model_12 bool | None Custom Boolean Field cca_bool_model_13 bool | None Custom Boolean Field cca_bool_model_14 bool | None Custom Boolean Field cca_bool_model_15 bool | None Custom Boolean Field cca_bool_model_16 bool | None Custom Boolean Field cca_bool_model_17 bool | None Custom Boolean Field cca_bool_model_18 bool | None Custom Boolean Field cca_bool_model_19 bool | None Custom Boolean Field cca_bool_model_20 bool | None Custom Boolean Field cca_date_model_1 datetime | None Custom Date Field cca_date_model_2 datetime | None Custom Date Field cca_date_model_3 datetime | None Custom Date Field cca_date_model_4 datetime | None Custom Date Field cca_date_model_5 datetime | None Custom Date Field cca_date_model_6 datetime | None Custom Date Field cca_date_model_7 datetime | None Custom Date Field cca_date_model_8 datetime | None Custom Date Field cca_date_model_9 datetime | None Custom Date Field cca_date_model_10 datetime | None Custom Date Field cca_date_model_11 datetime | None Custom Date Field cca_date_model_12 datetime | None Custom Date Field cca_date_model_13 datetime | None Custom Date Field cca_date_model_14 datetime | None Custom Date Field cca_date_model_15 datetime | None Custom Date Field cca_date_model_16 datetime | None Custom Date Field cca_date_model_17 datetime | None Custom Date Field cca_date_model_18 datetime | None Custom Date Field cca_date_model_19 datetime | None Custom Date Field cca_date_model_20 datetime | None Custom Date Field files list[File] Files attached to the document part typing.Optional[Part]"},{"location":"reference/objects/#engineeringchange","title":"EngineeringChange","text":"<p><code>csfunctions.objects.EngineeringChange</code></p> Attribute Type Description cdb_ec_id str Engineering Change ID cdb_project_id str | None Project ID ec_state str end_time_plan datetime | None Planned end time status int Status title str | None Title template_ec_id str | None Template ID cdb_object_id str | None Object ID c_department str | None Department c_description str | None Description c_event str | None Event c_reason str | None Reason c_source str | None Source category str | None Category part_ids list[str] List of part IDs, that were changed. (teilenummer@t_index) document_ids list[str] List of document IDs, that were changed. (z_nummer@z_index) planned_changes_part_ids list[str] List of part IDs, that were planned to be changed. (teilenummer@t_index) planned_changes_document_ids list[str] List of document IDs, that were planned to be changed. (z_nummer@z_index) accompanying_document_ids list[str] List of document IDs, that accompany the change. (z_nummer@z_index) parts list[Part] documents list[Document] planned_changes_parts list[Part] planned_changes_documents list[Document] accompanying_documents list[Document] cdb_cpersno str | None Created by cdb_cdate datetime | None Created on cdb_mpersno str Last Modified by cdb_mdate datetime | None Last Modified on"},{"location":"reference/objects/#file","title":"File","text":"<p><code>csfunctions.objects.File</code></p> Attribute Type Description cdb_object_id str ID cdbf_name str | None file name cdbf_type str | None file type cdb_cpersno str | None Created by mapped_cdb_cpersno_name str | None Created by cdb_cdate datetime | None Created on cdb_mpersno str | None Last Modified by mapped_cdb_mpersno_name str | None Last Modified by cdb_mdate datetime | None Last Modified on blob_url str | None Presigned Blob URL"},{"location":"reference/objects/#material","title":"Material","text":"<p><code>csfunctions.objects.Material</code></p> Attribute Type Description cdb_object_id str | None Object ID material_index str | None Material Index material_id str | None Material ID name_de str | None Name DE name_en str | None Name EN short_name str | None Short Name application str | None Applications remark str | None Remarks"},{"location":"reference/objects/#objectpropertyvalue","title":"ObjectPropertyValue","text":"<p><code>csfunctions.objects.ObjectPropertyValue</code></p> <p>An objects property, used by classification.</p> Attribute Type Description ref_object_id str Referenced Object boolean_value int | None Boolean Value datetime_value datetime | None Datetime Value float_value float | None Float Value float_value_normalized float | None Float Value Normalized integer_value int | None Integer Value iso_language_code str | None ISO Language Code value_pos int | None Position property_code str | None Property Code property_path str | None Property Path property_type str | None Property Type range_identifier str | None Range ID text_value str | None Text"},{"location":"reference/objects/#part","title":"Part","text":"<p><code>csfunctions.objects.Part</code></p> Attribute Type Description teilenummer str part number t_index str part index status int Status Number materialnr_erp str | None Material No. (ERP) benennung str | None Name eng_benennung str | None Name benennung2 str | None Additional Name t_kategorie_name_de str | None Category Name t_kategorie_name_en str | None Category Name cdb_t_project_id str | None Project ID t_bereich str | None Department cdb_t_ec_id str | None Engineering Change ID item_maturity int | None Maturity Level gebrauchsstand_name_de str | None Usage Status gebrauchsstand_name_en str | None Usage Status ce_valid_from date | datetime | None Effective from ce_valid_to date | datetime | None Effective to mengeneinheit_name_de str | None Quantity Unit mengeneinheit_name_en str | None Quantity Unit st_gewicht typing.Optional[float] Weight (kg) material_object_id str | None Material ID surface_name_en str | None Surface surface_name_de str | None Surface techdaten str | None Engineering Data cssaas_mirrored_from str | None Mirror Part ID t_ersatz_fuer str | None Replacement for t_ersatz_durch str | None Replaced by din str | None Norms bemerkung str | None Remarks cdb_copy_of_item_id str | None Copy of ID type_object_id str | None BOM Type ID cdb_depends_on str | None Derived from site_object_id str | None Plant cssaas_frame_add_attr_1 str | None Additional Attribute 1 cssaas_frame_add_attr_2 str | None Additional Attribute 2 cssaas_frame_add_attr_3 str | None Additional Attribute 3 cssaas_frame_add_attr_4 str | None Additional Attribute 4 cssaas_frame_add_attr_5 str | None Additional Attribute 5 cdb_cpersno str | None Created by cdb_cpersno_name str | None Created by cdb_cdate datetime | None Created on cdb_mpersno str | None Last Modified by cdb_mpersno_name str | None Last Modified by cdb_mdate datetime | None Last Modified on cdb_m2persno str | None File Last Saved by cdb_m2persno_name str | None File Last Saved by cdb_m2date datetime | None File Last Saved on st_durchmesser float | None Diameter st_laenge float | None Length st_hoehe float | None Height cdb_object_id str | None Object ID site_erp str | None Plant fertart str | None Production Type t_pruef_datum datetime | None Release Date oberflaeche str | None Surface mengeneinheit str | None Unit of Measure gebrauchsstand str | None Usability st_breite float | None Width cca_char_1 str | None Custom Char Field cca_char_2 str | None Custom Char Field cca_char_3 str | None Custom Char Field cca_char_4 str | None Custom Char Field cca_char_5 str | None Custom Char Field cca_char_6 str | None Custom Char Field cca_char_7 str | None Custom Char Field cca_char_8 str | None Custom Char Field cca_char_9 str | None Custom Char Field cca_char_10 str | None Custom Char Field cca_char_11 str | None Custom Char Field cca_char_12 str | None Custom Char Field cca_char_13 str | None Custom Char Field cca_char_14 str | None Custom Char Field cca_char_15 str | None Custom Char Field cca_char_16 str | None Custom Char Field cca_char_17 str | None Custom Char Field cca_char_18 str | None Custom Char Field cca_char_19 str | None Custom Char Field cca_char_20 str | None Custom Char Field cca_bigchar_part_1 str | None Custom BigChar Field cca_bigchar_part_2 str | None Custom BigChar Field cca_bigchar_part_3 str | None Custom BigChar Field cca_bigchar_part_4 str | None Custom BigChar Field cca_bigchar_part_5 str | None Custom BigChar Field cca_bigchar_part_6 str | None Custom BigChar Field cca_bigchar_part_7 str | None Custom BigChar Field cca_bigchar_part_8 str | None Custom BigChar Field cca_bigchar_part_9 str | None Custom BigChar Field cca_bigchar_part_10 str | None Custom BigChar Field cca_bigchar_part_11 str | None Custom BigChar Field cca_bigchar_part_12 str | None Custom BigChar Field cca_bigchar_part_13 str | None Custom BigChar Field cca_bigchar_part_14 str | None Custom BigChar Field cca_bigchar_part_15 str | None Custom BigChar Field cca_bigchar_part_16 str | None Custom BigChar Field cca_bigchar_part_17 str | None Custom BigChar Field cca_bigchar_part_18 str | None Custom BigChar Field cca_bigchar_part_19 str | None Custom BigChar Field cca_bigchar_part_20 str | None Custom BigChar Field cca_integer_part_1 int | None Custom Integer Field cca_integer_part_2 int | None Custom Integer Field cca_integer_part_3 int | None Custom Integer Field cca_integer_part_4 int | None Custom Integer Field cca_integer_part_5 int | None Custom Integer Field cca_integer_part_6 int | None Custom Integer Field cca_integer_part_7 int | None Custom Integer Field cca_integer_part_8 int | None Custom Integer Field cca_integer_part_9 int | None Custom Integer Field cca_integer_part_10 int | None Custom Integer Field cca_integer_part_11 int | None Custom Integer Field cca_integer_part_12 int | None Custom Integer Field cca_integer_part_13 int | None Custom Integer Field cca_integer_part_14 int | None Custom Integer Field cca_integer_part_15 int | None Custom Integer Field cca_integer_part_16 int | None Custom Integer Field cca_integer_part_17 int | None Custom Integer Field cca_integer_part_18 int | None Custom Integer Field cca_integer_part_19 int | None Custom Integer Field cca_integer_part_20 int | None Custom Integer Field cca_float_part_1 float | None Custom Float Field cca_float_part_2 float | None Custom Float Field cca_float_part_3 float | None Custom Float Field cca_float_part_4 float | None Custom Float Field cca_float_part_5 float | None Custom Float Field cca_float_part_6 float | None Custom Float Field cca_float_part_7 float | None Custom Float Field cca_float_part_8 float | None Custom Float Field cca_float_part_9 float | None Custom Float Field cca_float_part_10 float | None Custom Float Field cca_float_part_11 float | None Custom Float Field cca_float_part_12 float | None Custom Float Field cca_float_part_13 float | None Custom Float Field cca_float_part_14 float | None Custom Float Field cca_float_part_15 float | None Custom Float Field cca_float_part_16 float | None Custom Float Field cca_float_part_17 float | None Custom Float Field cca_float_part_18 float | None Custom Float Field cca_float_part_19 float | None Custom Float Field cca_float_part_20 float | None Custom Float Field cca_bool_part_1 bool | None Custom Boolean Field cca_bool_part_2 bool | None Custom Boolean Field cca_bool_part_3 bool | None Custom Boolean Field cca_bool_part_4 bool | None Custom Boolean Field cca_bool_part_5 bool | None Custom Boolean Field cca_bool_part_6 bool | None Custom Boolean Field cca_bool_part_7 bool | None Custom Boolean Field cca_bool_part_8 bool | None Custom Boolean Field cca_bool_part_9 bool | None Custom Boolean Field cca_bool_part_10 bool | None Custom Boolean Field cca_bool_part_11 bool | None Custom Boolean Field cca_bool_part_12 bool | None Custom Boolean Field cca_bool_part_13 bool | None Custom Boolean Field cca_bool_part_14 bool | None Custom Boolean Field cca_bool_part_15 bool | None Custom Boolean Field cca_bool_part_16 bool | None Custom Boolean Field cca_bool_part_17 bool | None Custom Boolean Field cca_bool_part_18 bool | None Custom Boolean Field cca_bool_part_19 bool | None Custom Boolean Field cca_bool_part_20 bool | None Custom Boolean Field cca_date_part_1 datetime | None Custom Date Field cca_date_part_2 datetime | None Custom Date Field cca_date_part_3 datetime | None Custom Date Field cca_date_part_4 datetime | None Custom Date Field cca_date_part_5 datetime | None Custom Date Field cca_date_part_6 datetime | None Custom Date Field cca_date_part_7 datetime | None Custom Date Field cca_date_part_8 datetime | None Custom Date Field cca_date_part_9 datetime | None Custom Date Field cca_date_part_10 datetime | None Custom Date Field cca_date_part_11 datetime | None Custom Date Field cca_date_part_12 datetime | None Custom Date Field cca_date_part_13 datetime | None Custom Date Field cca_date_part_14 datetime | None Custom Date Field cca_date_part_15 datetime | None Custom Date Field cca_date_part_16 datetime | None Custom Date Field cca_date_part_17 datetime | None Custom Date Field cca_date_part_18 datetime | None Custom Date Field cca_date_part_19 datetime | None Custom Date Field cca_date_part_20 datetime | None Custom Date Field document_ids list[str] List of document IDs, that were changed. (z_nummer@z_index) documents list[Document]"},{"location":"reference/objects/#person","title":"Person","text":"<p><code>csfunctions.objects.Person</code></p> Attribute Type Description personalnummer str Personal Number name str System-Name firstname str | None First Name lastname str | None Last Name gender str | None Gender title str | None Title initials str | None Initials active_account bool | None Active Account org_id str | None Organization ID abt_nummer str | None Department Number e_mail str | None Email telefon str | None Phone"},{"location":"reference/objects/#workflow","title":"Workflow","text":"<p><code>csfunctions.objects.Workflow</code></p> Attribute Type Description cdb_process_id str Workflow ID title str | None Title started_at datetime | None Date when the workflow was started. started_by str | None ID of the user who started the workflow. local_briefcase_ids list[str] List of local briefcase ids (cdb_object_id) global_briefcase_ids list[str] List of global briefcase ids (cdb_object_id) local_briefcases list[Briefcase] global_briefcases list[Briefcase]"},{"location":"reference/runtime/","title":"Python runtime","text":"<p>This section is aimed at developers that want to build their own Functions-SDK. If you are building Functions with csfunctions you can skip this part.</p>"},{"location":"reference/runtime/#architecture","title":"Architecture","text":"<p>Function environment are docker containers that run in AWS-lambda. The Python runtime utilizes awslambdaric to handle the requests. The Python runtime is part of the CIM Database Cloud Functions infrastructure and currently cannot be customized.</p>"},{"location":"reference/runtime/#lambda-execute-function-request","title":"Lambda \"execute\" Function request","text":"<p>When a Webhook is calling a Function the following request body will be sent to the endpoint of the Lambda-Function: <pre><code>{\n    \"request\": \"execute\",\n    \"function\" : \"my_function\",\n    \"payload\" : \"{... json encoded payload}\"\n}\n</code></pre></p> <p>This request is then processed by the Python runtimes dispatcher. The dispatcher calls the execute handler <code>csfunctions.handler.execute</code>. If you don't want to use csfunctions you need to implement your own execute handler and register your custom handler in the <code>environment.yaml</code> config file as <code>main_entrypoint</code>.</p> environment.yaml<pre><code>runtime: python3.10\nversion: v1\nmain_entrypoint: mymodule.execute  // register a custom execute handler here\nfunctions:\n  - name: myfunc\n    entrypoint: mymodule.myfunc\n</code></pre> <p>The signature of your custom <code>execute</code> method needs to look like this: <pre><code>def execute(\n  function_name: str,\n  request_body: str\n  ) -&gt; str:\n</code></pre></p> <p>The return value of the execute method is the json encoded response payload.</p>"},{"location":"reference/runtime/#payloads","title":"Payloads","text":"<p>The Request and response payloads are described in the CIM Database Cloud documentation. The functions-sdk-python\u00a0\u29c9 GitHub repository also contains the complete JSON-schema files\u00a0\u29c9.</p>"},{"location":"reference/service/","title":"Functions Access Service","text":"<p>The Functions Access Service provides access to backend services like number generators and file uploads. These services are available through the <code>service</code> parameter that is passed to all Functions.</p> <p>The Access Service is ratelimited to <code>100 req/min</code> per token. Functions receive a fresh token for every call.</p> <pre><code>from csfunctions import Service\n\ndef my_function(metadata, event, service: Service):\n    ...\n</code></pre>"},{"location":"reference/service/#number-generation","title":"Number Generation","text":"<p>You can use the <code>service.generator</code> to generate unique numbers, for example for part numbers or document IDs.</p>"},{"location":"reference/service/#methods","title":"Methods","text":"<ul> <li><code>get_number(name: str) -&gt; int</code>     Retrieve one number from the given generator.</li> <li><code>get_numbers(name: str, count: int) -&gt; list[int]</code>     Retrieve multiple numbers from the given generator in one request.     Maximum for <code>count</code> is 100.</li> </ul> <p>Example:</p> <pre><code>new_number = service.generator.get_number(\"external_part_number\")\n# Returns an integer, e.g. 123\n</code></pre> <p>To generate multiple numbers at once:</p> <pre><code>numbers = service.generator.get_numbers(\"external_part_number\", count=5)\n# Returns a list of integers\n</code></pre>"},{"location":"reference/service/#file-uploads","title":"File Uploads","text":"<p>The <code>service.file_upload</code> object allows you to upload new files to the CIM Database Cloud or overwrite existing ones.</p>"},{"location":"reference/service/#upload-a-new-file","title":"Upload a new file","text":"<p><pre><code>service.file_upload.upload_new_file(\n        self,\n        parent_object_id: str,\n        filename: str,\n        stream: BinaryIO,\n        persno: str | None = None,\n        check_access: bool = True,\n        filesize: int | None = None,\n    ) -&gt; str:\n</code></pre> Creates a new file attached to the parent object and uploads content from the provided stream. Returns the new file object ID.</p> Parameter Type Description <code>parent_object_id</code> <code>str</code> The ID of the parent object to which the new file will be attached. <code>filename</code> <code>str</code> The name of the new file to be uploaded. <code>stream</code> <code>BinaryIO</code> A binary stream containing the file data to upload. <code>persno</code> <code>str \\| None</code> The user/person number uploading the file (defaults to the user that triggered the Function). <code>check_access</code> <code>bool</code> Whether to check access permissions before uploading. Defaults to <code>True</code>. <code>filesize</code> <code>int \\| None</code> Size of the file in bytes (required only if the stream is not seekable). <p>Exceptions:</p> <ul> <li><code>csfunctions.service.Unauthorized</code>: If th service token is invalid.</li> <li><code>csfunctions.service.Forbidden</code>: If access check fails.</li> <li><code>csfunctions.service.NotFound</code>: If the parent object does not exist.</li> </ul> <p>Info</p> <p>Uploading new files performs 3 requests to the Functions Access Service, which count towards the ratelimit of <code>100 req/min</code> per token.</p> <p>Example:</p> <pre><code>with open(\"myfile.pdf\", \"rb\") as f:\n        file_object_id = service.file_upload.upload_new_file(\n                parent_object_id=\"123456\",\n                filename=\"myfile.pdf\",\n                stream=f\n        )\n</code></pre>"},{"location":"reference/service/#overwrite-an-existing-file","title":"Overwrite an existing file","text":"<p><pre><code>service.file_upload.upload_file_content(\n    file_object_id: str,\n    stream: BinaryIO,\n    persno: str | None = None,\n    check_access: bool = True,\n    filesize: int | None = None,\n    delete_derived_files: bool = True,\n    ) -&gt; None\n</code></pre> Uploads new content to an existing file object, overwriting its previous contents.</p> Parameter Type Description <code>file_object_id</code> <code>str</code> The ID of the file object to upload to (must already exist). <code>stream</code> <code>BinaryIO</code> A binary stream containing the file data to upload. <code>persno</code> <code>str \\| None</code> The user/person number uploading the file (defaults to the user that triggered the Function). <code>check_access</code> <code>bool</code> Whether to check access permissions before uploading. Defaults to <code>True</code>. <code>filesize</code> <code>int \\| None</code> Size of the file in bytes (required only if the stream is not seekable). <code>delete_derived_files</code> <code>bool</code> Whether to delete derived files (e.g. converted pdfs) after upload and trigger a new conversion. Defaults to <code>True</code>. <p>Warning</p> <p>Overwriting files is only possible if the file is not locked!</p> <p>Exceptions:</p> <ul> <li><code>csfunctions.service.Unauthorized</code>: If th service token is invalid.</li> <li><code>csfunctions.service.Forbidden</code>: If access check fails.</li> <li><code>csfunctions.service.Conflict</code>: If the file is already locked.</li> <li><code>csfunctions.service.NotFound</code>: If the file object does not exist.</li> <li><code>csfunctions.service.RateLimitExceeded</code>: If the services rate limit is exceeded.</li> </ul> <p>Info</p> <p>Uploading new files performs 2 requests to the Functions Access Service, which count towards the ratelimit of <code>100 req/min</code> per token.</p> <p>Example:</p> <pre><code>file = doc.files[0]\nwith open(\"updated_file.pdf\", \"rb\") as f:\n    service.file_upload.upload_file_content(\n        file_object_id=file.cdb_object_id,\n        stream=f\n    )\n</code></pre>"}]}