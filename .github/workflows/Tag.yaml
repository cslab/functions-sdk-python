name: Tag

on:
  push:
    tags:
      - "*"

jobs:
  # ---- Quality Checks ----
  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
    - uses: pre-commit/action@v3.0.0

  unittest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: |
        pip install --upgrade pip
        pip install poetry
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - name: Define a cache for the virtual environment based on the dependencies lock file
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Set up Python environment
      run: |
        poetry install --with test
    - name: Run Tests
      run: poetry run pytest --junit-xml=testresults/test-client.xml

  # ---- Publish ----
  build-and-publish:
    runs-on: ubuntu-latest
    needs: ["unittest", "pre-commit"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Build Package
        run: |
          poetry config pypi-token.pypi ${{secrets.PYPI_LIB_TOKEN}}
          poetry version ${{ github.ref_name }}
          poetry build
          poetry publish

  publish-docs:
    runs-on: ubuntu-latest
    needs: ["build-and-publish"]
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies for docs
        run: poetry install --with dev
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - name: Deploy docs
        run: poetry run mkdocs gh-deploy --force
